<?php
/*
* This file is part of EC-CUBE
*
* Copyright(c) 2000-2015 LOCKON CO.,LTD. All Rights Reserved.
* http://www.lockon.co.jp/
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/

namespace Plugin\MailMagazine\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SendCustomerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MailMagazineSendCustomerRepository extends EntityRepository
{
    /**
     * 指定したsend_idかつ未実行または失敗のsend_customerを取得する
     *
     * @param integer $sendId
     */
    public function getSendCustomerByNotSuccess($sendId)
    {
        $qb = $this->createQueryBuilder('c')
        ->select('c')
        ->andWhere('c.send_id = :send_id AND (c.send_flag = 2 OR c.send_flag IS NULL)')
        ->setParameter('send_id', $sendId);

        $result = $qb->getQuery()->getResult();
        return $result;
    }

    /**
     * dtb_send_customerに追加する.
     *
     * @param \Plugin\MailMagazine\Entity\MailMagazineSendCustomer $sendCustomer
     */
    public function createSendCustomer(\Plugin\MailMagazine\Entity\MailMagazineSendCustomer $sendCustomer)
    {
        $em = $this->getEntityManager();
        $em->getConnection()->beginTransaction();
        try {
            $em->persist($sendCustomer);
            $em->flush();

            $em->getConnection()->commit();
        } catch (\Exception $e) {
            $em->getConnection()->rollback();
            throw $e;
        }

        return true;
    }

    /**
     * dtb_send_customerを更新する.
     * updateSendCustomerを呼び出すだけだが明示的に指定する
     *
     * @param \Plugin\MailMagazine\Entity\MailMagazineSendHistory $sendHistory
     * @return boolean
     */
    public function updateSendCustomer(\Plugin\MailMagazine\Entity\MailMagazineSendCustomer $sendCustomer)
    {
        return $this->createSendCustomer($sendCustomer);
    }
}
